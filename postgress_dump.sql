-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.product_price_histories
(
    productpricehistoryid serial NOT NULL,
    productid integer NOT NULL,
    currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    date timestamp without time zone NOT NULL,
    price numeric(10, 2) NOT NULL,
    pricedecreasepercentage numeric(5, 2),
    CONSTRAINT product_price_histories_pkey PRIMARY KEY (productpricehistoryid),
    CONSTRAINT product_price_histories_unique UNIQUE (productid, date)
);

CREATE TABLE IF NOT EXISTS public.products
(
    productid serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    brand character varying(50) COLLATE pg_catalog."default",
    category character varying(50) COLLATE pg_catalog."default",
    quantity integer NOT NULL DEFAULT 0,
    measurement character varying(20) COLLATE pg_catalog."default",
    store character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (productid)
);

CREATE TABLE IF NOT EXISTS public.shopping_cart_products
(
    shoppingcartproductid serial NOT NULL,
    shoppingcartid integer NOT NULL,
    productid integer NOT NULL,
    CONSTRAINT shopping_cart_products_pkey PRIMARY KEY (shoppingcartproductid)
);

CREATE TABLE IF NOT EXISTS public.shopping_carts
(
    shoppingcartid serial NOT NULL,
    userid integer NOT NULL,
    CONSTRAINT shopping_carts_pkey PRIMARY KEY (shoppingcartid),
    CONSTRAINT shopping_carts_userid_key UNIQUE (userid)
);

CREATE TABLE IF NOT EXISTS public.users
(
    userid serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    passwordhash character varying(100) COLLATE pg_catalog."default" NOT NULL,
    passwordsalt character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (userid),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.watch_list_products
(
    watchlistproductid serial NOT NULL,
    watchlistid integer NOT NULL,
    productid integer NOT NULL,
    wantedprice numeric(10, 2),
    CONSTRAINT watch_list_products_pkey PRIMARY KEY (watchlistproductid),
    CONSTRAINT watch_list_products_watchlistid_productid_key UNIQUE (watchlistid, productid)
);

CREATE TABLE IF NOT EXISTS public.watch_lists
(
    watchlistid serial NOT NULL,
    userid integer NOT NULL,
    CONSTRAINT watch_lists_pkey PRIMARY KEY (watchlistid),
    CONSTRAINT watch_lists_userid_key UNIQUE (userid)
);

ALTER TABLE IF EXISTS public.product_price_histories
    ADD CONSTRAINT product_price_histories_productid_fkey FOREIGN KEY (productid)
    REFERENCES public.products (productid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.shopping_cart_products
    ADD CONSTRAINT shopping_cart_products_productid_fkey FOREIGN KEY (productid)
    REFERENCES public.products (productid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.shopping_cart_products
    ADD CONSTRAINT shopping_cart_products_shoppingcartid_fkey FOREIGN KEY (shoppingcartid)
    REFERENCES public.shopping_carts (shoppingcartid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.shopping_carts
    ADD CONSTRAINT shopping_carts_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (userid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS shopping_carts_userid_key
    ON public.shopping_carts(userid);


ALTER TABLE IF EXISTS public.watch_list_products
    ADD CONSTRAINT watch_list_products_productid_fkey FOREIGN KEY (productid)
    REFERENCES public.products (productid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watch_list_products
    ADD CONSTRAINT watch_list_products_watchlistid_fkey FOREIGN KEY (watchlistid)
    REFERENCES public.watch_lists (watchlistid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watch_lists
    ADD CONSTRAINT watch_lists_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (userid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS watch_lists_userid_key
    ON public.watch_lists(userid);

END;
